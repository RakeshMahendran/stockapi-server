from django.db import models

class AxisBankStockData(models.Model):
    ID = models.CharField(max_length=100, primary_key=True)
    Date = models.CharField(max_length=100)
    Open_Price = models.CharField(max_length=100)
    High_Price = models.CharField(max_length=100)
    Low_Price = models.CharField(max_length=100)
    Close_Price = models.CharField(max_length=100)
    Prev_Close_Price = models.CharField(max_length=100)
    Total_Traded_Quantity = models.CharField(max_length=100)
    Total_Traded_Value = models.CharField(max_length=100)
    Week_High_Price_52 = models.CharField(max_length=100)
    Week_Low_Price_52 = models.CharField(max_length=100)
    VWAP = models.CharField(max_length=100)
    Deliverable_Volume = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Percent = models.CharField(max_length=100, null=True, blank=True)
    Series = models.CharField(max_length=100)
    RSI = models.CharField(max_length=100, null=True, blank=True)
    Upper_Band = models.CharField(max_length=100, null=True, blank=True)
    Middle_Band = models.CharField(max_length=100, null=True, blank=True)
    Lower_Band = models.CharField(max_length=100, null=True, blank=True)
    Percent_K = models.CharField(max_length=100, null=True, blank=True)
    Percent_D = models.CharField(max_length=100, null=True, blank=True)
    MACD = models.CharField(max_length=100, null=True, blank=True)
    Signal_Line = models.CharField(max_length=100, null=True, blank=True)
    MA = models.CharField(max_length=100, null=True, blank=True)
    RSI_Recommendation = models.CharField(max_length=100)
    Bollinger_Recommendation = models.CharField(max_length=100)
    Stochastic_Recommendation = models.CharField(max_length=100)
    MACD_Recommendation = models.CharField(max_length=100)
    MA_Recommendation = models.CharField(max_length=100)

    def __str__(self):
        return f"{self.ID} - {self.Date} - {self.Series}"

class TCSStockData(models.Model):
    ID = models.IntegerField(primary_key=True)
    Date = models.CharField(max_length=100, null=True, blank=True)
    Open_Price = models.CharField(max_length=100, null=True, blank=True)
    High_Price = models.CharField(max_length=100, null=True, blank=True)
    Low_Price = models.CharField(max_length=100, null=True, blank=True)
    Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Prev_Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Quantity = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Value = models.CharField(max_length=100, null=True, blank=True)
    Week_High_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    Week_Low_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    VWAP = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Volume = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Percent = models.CharField(max_length=100, null=True, blank=True)
    Series = models.CharField(max_length=100, null=True, blank=True)
    RSI = models.CharField(max_length=100, null=True, blank=True)
    Upper_Band = models.CharField(max_length=100, null=True, blank=True)
    Middle_Band = models.CharField(max_length=100, null=True, blank=True)
    Lower_Band = models.CharField(max_length=100, null=True, blank=True)
    Percent_K = models.CharField(max_length=100, null=True, blank=True)
    Percent_D = models.CharField(max_length=100, null=True, blank=True)
    MACD = models.CharField(max_length=100, null=True, blank=True)
    Signal_Line = models.CharField(max_length=100, null=True, blank=True)
    MA = models.CharField(max_length=100, null=True, blank=True)
    RSI_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Bollinger_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Stochastic_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MACD_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MA_Recommendation = models.CharField(max_length=100, null=True, blank=True)

    def __str__(self):
        return f"{self.ID} - {self.Date} - {self.Series}"


class SBILifeStockData(models.Model):
    ID = models.IntegerField(primary_key=True)
    Date = models.CharField(max_length=100, null=True, blank=True)
    Open_Price = models.CharField(max_length=100, null=True, blank=True)
    High_Price = models.CharField(max_length=100, null=True, blank=True)
    Low_Price = models.CharField(max_length=100, null=True, blank=True)
    Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Prev_Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Quantity = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Value = models.CharField(max_length=100, null=True, blank=True)
    Week_High_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    Week_Low_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    VWAP = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Volume = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Percent = models.CharField(max_length=100, null=True, blank=True)
    Series = models.CharField(max_length=100, null=True, blank=True)
    RSI = models.CharField(max_length=100, null=True, blank=True)
    Upper_Band = models.CharField(max_length=100, null=True, blank=True)
    Middle_Band = models.CharField(max_length=100, null=True, blank=True)
    Lower_Band = models.CharField(max_length=100, null=True, blank=True)
    Percent_K = models.CharField(max_length=100, null=True, blank=True)
    Percent_D = models.CharField(max_length=100, null=True, blank=True)
    MACD = models.CharField(max_length=100, null=True, blank=True)
    Signal_Line = models.CharField(max_length=100, null=True, blank=True)
    MA = models.CharField(max_length=100, null=True, blank=True)
    RSI_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Bollinger_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Stochastic_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MACD_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MA_Recommendation = models.CharField(max_length=100, null=True, blank=True)

    def __str__(self):
        return f"{self.ID} - {self.Date} - {self.Series}"

class LTStockData(models.Model):
    ID = models.IntegerField(primary_key=True)
    Date = models.CharField(max_length=100, null=True, blank=True)
    Open_Price = models.CharField(max_length=100, null=True, blank=True)
    High_Price = models.CharField(max_length=100, null=True, blank=True)
    Low_Price = models.CharField(max_length=100, null=True, blank=True)
    Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Prev_Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Quantity = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Value = models.CharField(max_length=100, null=True, blank=True)
    Week_High_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    Week_Low_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    VWAP = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Volume = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Percent = models.CharField(max_length=100, null=True, blank=True)
    Series = models.CharField(max_length=100, null=True, blank=True)
    RSI = models.CharField(max_length=100, null=True, blank=True)
    Upper_Band = models.CharField(max_length=100, null=True, blank=True)
    Middle_Band = models.CharField(max_length=100, null=True, blank=True)
    Lower_Band = models.CharField(max_length=100, null=True, blank=True)
    Percent_K = models.CharField(max_length=100, null=True, blank=True)
    Percent_D = models.CharField(max_length=100, null=True, blank=True)
    MACD = models.CharField(max_length=100, null=True, blank=True)
    Signal_Line = models.CharField(max_length=100, null=True, blank=True)
    MA = models.CharField(max_length=100, null=True, blank=True)
    RSI_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Bollinger_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Stochastic_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MACD_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MA_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    def __str__(self):
        return f"{self.ID} - {self.Date} - {self.Series}"

class InfosysStockData(models.Model):
    ID = models.IntegerField(primary_key=True)
    Date = models.CharField(max_length=100, null=True, blank=True)
    Open_Price = models.CharField(max_length=100, null=True, blank=True)
    High_Price = models.CharField(max_length=100, null=True, blank=True)
    Low_Price = models.CharField(max_length=100, null=True, blank=True)
    Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Prev_Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Quantity = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Value = models.CharField(max_length=100, null=True, blank=True)
    Week_High_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    Week_Low_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    VWAP = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Volume = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Percent = models.CharField(max_length=100, null=True, blank=True)
    Series = models.CharField(max_length=100, null=True, blank=True)
    RSI = models.CharField(max_length=100, null=True, blank=True)
    Upper_Band = models.CharField(max_length=100, null=True, blank=True)
    Middle_Band = models.CharField(max_length=100, null=True, blank=True)
    Lower_Band = models.CharField(max_length=100, null=True, blank=True)
    Percent_K = models.CharField(max_length=100, null=True, blank=True)
    Percent_D = models.CharField(max_length=100, null=True, blank=True)
    MACD = models.CharField(max_length=100, null=True, blank=True)
    Signal_Line = models.CharField(max_length=100, null=True, blank=True)
    MA = models.CharField(max_length=100, null=True, blank=True)
    RSI_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Bollinger_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Stochastic_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MACD_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MA_Recommendation = models.CharField(max_length=100, null=True, blank=True)

    def __str__(self):
        return f"{self.ID} - {self.Date} - {self.Series}"

class HindalcoStockData(models.Model):
    ID = models.IntegerField(primary_key=True)
    Date = models.CharField(max_length=100, null=True, blank=True)
    Open_Price = models.CharField(max_length=100, null=True, blank=True)
    High_Price = models.CharField(max_length=100, null=True, blank=True)
    Low_Price = models.CharField(max_length=100, null=True, blank=True)
    Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Prev_Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Quantity = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Value = models.CharField(max_length=100, null=True, blank=True)
    Week_High_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    Week_Low_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    VWAP = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Volume = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Percent = models.CharField(max_length=100, null=True, blank=True)
    Series = models.CharField(max_length=100, null=True, blank=True)
    RSI = models.CharField(max_length=100, null=True, blank=True)
    Upper_Band = models.CharField(max_length=100, null=True, blank=True)
    Middle_Band = models.CharField(max_length=100, null=True, blank=True)
    Lower_Band = models.CharField(max_length=100, null=True, blank=True)
    Percent_K = models.CharField(max_length=100, null=True, blank=True)
    Percent_D = models.CharField(max_length=100, null=True, blank=True)
    MACD = models.CharField(max_length=100, null=True, blank=True)
    Signal_Line = models.CharField(max_length=100, null=True, blank=True)
    MA = models.CharField(max_length=100, null=True, blank=True)
    RSI_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Bollinger_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Stochastic_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MACD_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MA_Recommendation = models.CharField(max_length=100, null=True, blank=True)

    def __str__(self):
        return f"{self.ID} - {self.Date} - {self.Series}"

class AggregatedStockData(models.Model):
    Date = models.CharField(max_length=100, null=True, blank=True)
    Open_Price = models.CharField(max_length=100, null=True, blank=True)
    High_Price = models.CharField(max_length=100, null=True, blank=True)
    Low_Price = models.CharField(max_length=100, null=True, blank=True)
    Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Prev_Close_Price = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Quantity = models.CharField(max_length=100, null=True, blank=True)
    Total_Traded_Value = models.CharField(max_length=100, null=True, blank=True)
    Week_High_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    Week_Low_Price_52 = models.CharField(max_length=100, null=True, blank=True)
    VWAP = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Volume = models.CharField(max_length=100, null=True, blank=True)
    Deliverable_Percent = models.CharField(max_length=100, null=True, blank=True)
    Series = models.CharField(max_length=100, null=True, blank=True)
    RSI = models.CharField(max_length=100, null=True, blank=True)
    Upper_Band = models.CharField(max_length=100, null=True, blank=True)
    Middle_Band = models.CharField(max_length=100, null=True, blank=True)
    Lower_Band = models.CharField(max_length=100, null=True, blank=True)
    Percent_K = models.CharField(max_length=100, null=True, blank=True)
    Percent_D = models.CharField(max_length=100, null=True, blank=True)
    MACD = models.CharField(max_length=100, null=True, blank=True)
    Signal_Line = models.CharField(max_length=100, null=True, blank=True)
    MA = models.CharField(max_length=100, null=True, blank=True)
    RSI_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Bollinger_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    Stochastic_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MACD_Recommendation = models.CharField(max_length=100, null=True, blank=True)
    MA_Recommendation = models.CharField(max_length=100, null=True, blank=True)

    def __str__(self):
        return f"{self.date} - {self.company_name} - {self.series}"

